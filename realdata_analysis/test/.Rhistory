# 描画
df_list$edgeR[,i] <-data$edgeR
df_list$DESeq2[,i] <- data$DESeq2
df_list$MBCdeg1[,i] <- data$MBCdeg1_pos
df_list$MBCdeg2[,i] <- data$MBCdeg2_pos
df_list$MBCdeg3[,i] <- data$MBCdeg3_pos
}
P <-paste('(PG1, PG2)\n','(',p1,',',1-p1,')',sep='')
datMBCdeg1 <- data.frame(Method = "MBCdeg1", P1=P,melt(df_list$MBCdeg1))
datMBCdeg2 <- data.frame(Method = "MBCdeg2", P1=P,melt(df_list$MBCdeg2))
datMBCdeg3 <- data.frame(Method = "MBCdeg3", P1=P,melt(df_list$MBCdeg3))
datedgeR <- data.frame(Method = "edgeR", P1=P,melt(df_list$edgeR))
datDESeq2 <- data.frame(Method = "DESeq2", P1=P,melt(df_list$DESeq2))
colnames(datMBCdeg1)<-colnames(datMBCdeg2)<-colnames(datMBCdeg3)<-colnames(datedgeR)<-colnames(datDESeq2)<-c("Method","P1","nominal_FDR","PDEG","true_FDR")
head(datMBCdeg1)
dat <- rbind(datMBCdeg1,datMBCdeg2,datMBCdeg3,datedgeR,datDESeq2)
matome <- rbind(matome,dat)
}
matome
cutoff <- matome[matome$nominal_FDR==0.05,]
g <- ggplot(matome,aes(x = nominal_FDR, y = true_FDR, fill = Method))+
theme_bw()+labs(x="Cut off",y="FDR" ,color='Method')
g <- g + scale_x_continuous(limit=c(0.0,1.0),breaks = c(0.0,1.0))
g <- g + scale_y_continuous(limit=c(0.0,1.0),breaks = c(0.0,1.0))
g <- g + scale_color_manual(values = c("#cd853f","#8a2be2","#FF367F","#4689FF","#009900","#696969"),labels = labels)
g <- g + geom_line(aes(col = Method),size = 0.7)
g <- g + geom_abline(intercept = 0, slope = 1,linetype=2,alpha=0.8) + labs(color = "Method")
g <- g + geom_point(data = cutoff,mapping = aes(x = nominal_FDR, y = true_FDR, col = Method),
show.legend = FALSE)
g <- g + theme(aspect.ratio = 1,
axis.title.x = element_text(size = 15, face = "bold"),
axis.title.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 14, face = "bold"),
strip.text.x = element_text(size = 17, face = "bold.italic"),
strip.text.y = element_text(size = 17, face = "bold.italic"),
legend.box='horizontal',
legend.position='none', #'bottom','none'
legend.title = element_blank(),
legend.text = element_text(size = 13,face = "bold.italic")
)
g <- g + facet_grid(PDEG ~ P1)
plot(g)
PDEG <- c(0.75)
P1 <- c(1.0)
n1 <- 3
nominalFDR <- seq(0,1,0.001)
name <- 'tcc'
labels <-c("DESeq2","edgeR","MBCdeg1_pos","MBCdeg2_pos","MBCdeg3_pos")
labels <-c("DESeq2","edgeR","MBCdeg1_q","MBCdeg2_q","MBCdeg3_q")
matome <- NULL
df_list <- vector("list", length = 5)
for (i in 1:length(df_list)){
df_list[[i]] <- matrix(0, ncol = length(PDEG), nrow = length(nominalFDR))
colnames(df_list[[i]]) <- paste('PDEG = ',PDEG,sep='')
rownames(df_list[[i]]) <- nominalFDR
}
names(df_list) <- c("edgeR","DESeq2","MBCdeg1","MBCdeg2","MBCdeg3")
for (p1 in P1){
for (i in 1:length(PDEG)){
# FDR
in_f <- paste("res_fdr/fdr_2group_",name,"_",PDEG[i],"_",p1,"_n",n1,".txt",sep="")
#in_f <- paste("test_fixed_FDR/test_",PDEG[i],"_",p1,"_",n1,"_FDR.txt",sep="")
data <- read.table(in_f,sep='\t',header = T)
head(data)
for (c in 1:ncol(data)){
data[,c][is.infinite(data[,c])] <- 0
}
# 描画
df_list$edgeR[,i] <-data$edgeR
df_list$DESeq2[,i] <- data$DESeq2
df_list$MBCdeg1[,i] <- data$MBCdeg1_pos
df_list$MBCdeg2[,i] <- data$MBCdeg2_pos
df_list$MBCdeg3[,i] <- data$MBCdeg3_pos
}
P <-paste('(PG1, PG2)\n','(',p1,',',1-p1,')',sep='')
datMBCdeg1 <- data.frame(Method = "MBCdeg1", P1=P,melt(df_list$MBCdeg1))
datMBCdeg2 <- data.frame(Method = "MBCdeg2", P1=P,melt(df_list$MBCdeg2))
datMBCdeg3 <- data.frame(Method = "MBCdeg3", P1=P,melt(df_list$MBCdeg3))
datedgeR <- data.frame(Method = "edgeR", P1=P,melt(df_list$edgeR))
datDESeq2 <- data.frame(Method = "DESeq2", P1=P,melt(df_list$DESeq2))
colnames(datMBCdeg1)<-colnames(datMBCdeg2)<-colnames(datMBCdeg3)<-colnames(datedgeR)<-colnames(datDESeq2)<-c("Method","P1","nominal_FDR","PDEG","true_FDR")
head(datMBCdeg1)
dat <- rbind(datMBCdeg1,datMBCdeg2,datMBCdeg3,datedgeR,datDESeq2)
matome <- rbind(matome,dat)
}
matome
cutoff <- matome[matome$nominal_FDR==0.05,]
g <- ggplot(matome,aes(x = nominal_FDR, y = true_FDR, fill = Method))+
theme_bw()+labs(x="Cut off",y="FDR" ,color='Method')
g <- g + scale_x_continuous(limit=c(0.0,1.0),breaks = c(0.0,1.0))
g <- g + scale_y_continuous(limit=c(0.0,1.0),breaks = c(0.0,1.0))
g <- g + scale_color_manual(values = c("#cd853f","#8a2be2","#FF367F","#4689FF","#009900","#696969"),labels = labels)
g <- g + geom_line(aes(col = Method),size = 0.7)
g <- g + geom_abline(intercept = 0, slope = 1,linetype=2,alpha=0.8) + labs(color = "Method")
g <- g + geom_point(data = cutoff,mapping = aes(x = nominal_FDR, y = true_FDR, col = Method),
show.legend = FALSE)
g <- g + theme(aspect.ratio = 1,
axis.title.x = element_text(size = 15, face = "bold"),
axis.title.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 14, face = "bold"),
strip.text.x = element_text(size = 17, face = "bold.italic"),
strip.text.y = element_text(size = 17, face = "bold.italic"),
legend.box='horizontal',
legend.position='none', #'bottom','none'
legend.title = element_blank(),
legend.text = element_text(size = 13,face = "bold.italic")
)
g <- g + facet_grid(PDEG ~ P1)
plot(g)
data[51,]
out_f <- paste('FDR_pos_',n1,'slide_figB.png',sep='')
ggsave(out_f,g, dpi = 300, width= 5 , height = 5)
PDEG <- c(0.05)
P1 <- c(0.5)
n1 <- 3
nominalFDR <- seq(0,1,0.001)
name <- 'tcc'
labels <-c("DESeq2","edgeR","MBCdeg1_pos","MBCdeg2_pos","MBCdeg3_pos")
labels <-c("DESeq2","edgeR","MBCdeg1_q","MBCdeg2_q","MBCdeg3_q")
matome <- NULL
df_list <- vector("list", length = 5)
for (i in 1:length(df_list)){
df_list[[i]] <- matrix(0, ncol = length(PDEG), nrow = length(nominalFDR))
colnames(df_list[[i]]) <- paste('PDEG = ',PDEG,sep='')
rownames(df_list[[i]]) <- nominalFDR
}
names(df_list) <- c("edgeR","DESeq2","MBCdeg1","MBCdeg2","MBCdeg3")
for (p1 in P1){
for (i in 1:length(PDEG)){
# FDR
in_f <- paste("res_fdr/fdr_2group_",name,"_",PDEG[i],"_",p1,"_n",n1,".txt",sep="")
#in_f <- paste("test_fixed_FDR/test_",PDEG[i],"_",p1,"_",n1,"_FDR.txt",sep="")
data <- read.table(in_f,sep='\t',header = T)
head(data)
for (c in 1:ncol(data)){
data[,c][is.infinite(data[,c])] <- 0
}
# 描画
df_list$edgeR[,i] <-data$edgeR
df_list$DESeq2[,i] <- data$DESeq2
df_list$MBCdeg1[,i] <- data$MBCdeg1_pos
df_list$MBCdeg2[,i] <- data$MBCdeg2_pos
df_list$MBCdeg3[,i] <- data$MBCdeg3_pos
}
P <-paste('(PG1, PG2)\n','(',p1,',',1-p1,')',sep='')
datMBCdeg1 <- data.frame(Method = "MBCdeg1", P1=P,melt(df_list$MBCdeg1))
datMBCdeg2 <- data.frame(Method = "MBCdeg2", P1=P,melt(df_list$MBCdeg2))
datMBCdeg3 <- data.frame(Method = "MBCdeg3", P1=P,melt(df_list$MBCdeg3))
datedgeR <- data.frame(Method = "edgeR", P1=P,melt(df_list$edgeR))
datDESeq2 <- data.frame(Method = "DESeq2", P1=P,melt(df_list$DESeq2))
colnames(datMBCdeg1)<-colnames(datMBCdeg2)<-colnames(datMBCdeg3)<-colnames(datedgeR)<-colnames(datDESeq2)<-c("Method","P1","nominal_FDR","PDEG","true_FDR")
head(datMBCdeg1)
dat <- rbind(datMBCdeg1,datMBCdeg2,datMBCdeg3,datedgeR,datDESeq2)
matome <- rbind(matome,dat)
}
matome
cutoff <- matome[matome$nominal_FDR==0.05,]
g <- ggplot(matome,aes(x = nominal_FDR, y = true_FDR, fill = Method))+
theme_bw()+labs(x="Cut off",y="FDR" ,color='Method')
g <- g + scale_x_continuous(limit=c(0.0,1.0),breaks = c(0.0,1.0))
g <- g + scale_y_continuous(limit=c(0.0,1.0),breaks = c(0.0,1.0))
g <- g + scale_color_manual(values = c("#cd853f","#8a2be2","#FF367F","#4689FF","#009900","#696969"),labels = labels)
g <- g + geom_line(aes(col = Method),size = 0.7)
g <- g + geom_abline(intercept = 0, slope = 1,linetype=2,alpha=0.8) + labs(color = "Method")
g <- g + geom_point(data = cutoff,mapping = aes(x = nominal_FDR, y = true_FDR, col = Method),
show.legend = FALSE)
g <- g + theme(aspect.ratio = 1,
axis.title.x = element_text(size = 15, face = "bold"),
axis.title.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 14, face = "bold"),
axis.text.y = element_text(size = 14, face = "bold"),
strip.text.x = element_text(size = 17, face = "bold.italic"),
strip.text.y = element_text(size = 17, face = "bold.italic"),
legend.box='horizontal',
legend.position='none', #'bottom','none'
legend.title = element_blank(),
legend.text = element_text(size = 13,face = "bold.italic")
)
g <- g + facet_grid(PDEG ~ P1)
plot(g)
out_f <- paste('FDR_pos_',n1,'slide_figA.png',sep='')
ggsave(out_f,g, dpi = 300, width= 5 , height = 5)
data[51,]
in_f <- "~/Desktop/res_2group_tcc_0.05_0.5_n3.obj"
data.all <- readRDS(in_f)
# MBCdeg1
## DEG判定された遺伝子table
DEG_table <- data.all$MBCdeg1$K3[[1]]$table[,1:3][data.all$MBCdeg1$K3[[1]]$table$estimatedDEG==1,]
## DEGであると誤検出されたDEG
falseDEG <- rownames(DEG_table)[as.numeric(gsub('gene_','',rownames(DEG_table))) > 500] # falseDEG名
falseDEG
n.falseDEG <- length(falseDEG) # falseDEG数
n.falseDEG
## フィルタリング
for (g in 1:nrow(data.all$MBCdeg1$K3[[1]]$table)){
if(max(data.all$MBCdeg1$K3[[1]]$table[g,1:3]) < 0.7){
data.all$MBCdeg1$K3[[1]]$table[g,]$estimatedDEG <- 2
}
}
data.all$MBCdeg1$K3[[1]]$table$estimatedDEG==2
## DEG判定された遺伝子table
DEG_table.fil <- data.all$MBCdeg1$K3[[1]]$table[,1:3][data.all$MBCdeg1$K3[[1]]$table$estimatedDEG==1,]
dim(DEG_table.fil)
## DEGであると誤検出されたDEG
falseDEG.fil <- rownames(DEG_table.fil)[as.numeric(gsub('gene_','',rownames(DEG_table.fil))) > 500] # falseDEG名
falseDEG
n.falseDEG.fil <- length(falseDEG.fil) # falseDEG数
n.falseDEG.fil
## フィルタリングによって減った検出DEG数
nrow(DEG_table)-nrow(DEG_table.fil)   # 63
## フィルタリングによって減ったfalseDEG数
n.falseDEG - n.falseDEG.fil # 56
## 結果をまとめる
pre <- list(disDEG = rownames(DEG_table),
falseDEG = falseDEG,
n.disDEG = nrow(DEG_table),
n.falseDEG = n.falseDEG)
pos <- list(disDEG.fil = rownames(DEG_table,fil),
falseDEG.fil = falseDEG.fil,
n.disDEG.fil = nrow(DEG_table.fil),
n.falseDEG.fil = n.falseDEG.fil)
res_mbcdeg1 <- list(pre = pre, pos = pos)
# MBCdeg2
## DEG判定された遺伝子table
DEG_table <- data.all$MBCdeg2$K3[[1]]$table[,1:3][data.all$MBCdeg2$K3[[1]]$table$estimatedDEG==1,]
## DEGであると誤検出されたDEG
falseDEG <- rownames(DEG_table)[as.numeric(gsub('gene_','',rownames(DEG_table))) > 500] # falseDEG名
falseDEG
n.falseDEG <- length(falseDEG) # falseDEG数
n.falseDEG
## フィルタリング
for (g in 1:nrow(data.all$MBCdeg2$K3[[1]]$table)){
if(max(data.all$MBCdeg2$K3[[1]]$table[g,1:3]) < 0.7){
data.all$MBCdeg2$K3[[1]]$table[g,]$estimatedDEG <- 2
}
}
data.all$MBCdeg2$K3[[1]]$table$estimatedDEG==2
## DEG判定された遺伝子table
DEG_table.fil <- data.all$MBCdeg2$K3[[1]]$table[,1:3][data.all$MBCdeg2$K3[[1]]$table$estimatedDEG==1,]
dim(DEG_table.fil)
## DEGであると誤検出されたDEG
falseDEG.fil <- rownames(DEG_table.fil)[as.numeric(gsub('gene_','',rownames(DEG_table.fil))) > 500] # falseDEG名
n.falseDEG.fil <- length(falseDEG.fil) # falseDEG数
n.falseDEG.fil
## フィルタリングによって減った検出DEG数
nrow(DEG_table)-nrow(DEG_table.fil)   # 63
## フィルタリングによって減ったfalseDEG数
n.falseDEG - n.falseDEG.fil # 56
## 結果をまとめる
pre <- list(disDEG = rownames(DEG_table),
falseDEG = falseDEG,
n.disDEG = nrow(DEG_table),
n.falseDEG = n.falseDEG)
pos <- list(disDEG.fil = rownames(DEG_table,fil),
falseDEG.fil = falseDEG.fil,
n.disDEG.fil = nrow(DEG_table.fil),
n.falseDEG.fil = n.falseDEG.fil)
res_mbcdeg2 <- list(pre = pre, pos = pos)
# MBCdeg3
## DEG判定された遺伝子table
DEG_table <- data.all$MBCdeg3$K3[[1]]$table[,1:3][data.all$MBCdeg3$K3[[1]]$table$estimatedDEG==1,]
## DEGであると誤検出されたDEG
falseDEG <- rownames(DEG_table)[as.numeric(gsub('gene_','',rownames(DEG_table))) > 500] # falseDEG名
falseDEG
n.falseDEG <- length(falseDEG) # falseDEG数
n.falseDEG
## フィルタリング
for (g in 1:nrow(data.all$MBCdeg3$K3[[1]]$table)){
if(max(data.all$MBCdeg3$K3[[1]]$table[g,1:3]) < 0.7){
data.all$MBCdeg3$K3[[1]]$table[g,]$estimatedDEG <- 2
}
}
data.all$MBCdeg3$K3[[1]]$table$estimatedDEG==2
## DEG判定された遺伝子table
DEG_table.fil <- data.all$MBCdeg3$K3[[1]]$table[,1:3][data.all$MBCdeg3$K3[[1]]$table$estimatedDEG==1,]
dim(DEG_table.fil)
## DEGであると誤検出されたDEG
falseDEG.fil <- rownames(DEG_table.fil)[as.numeric(gsub('gene_','',rownames(DEG_table.fil))) > 500] # falseDEG名
n.falseDEG.fil <- length(falseDEG.fil) # falseDEG数
n.falseDEG.fil
## フィルタリングによって減った検出DEG数
nrow(DEG_table)-nrow(DEG_table.fil)   # 63
## フィルタリングによって減ったfalseDEG数
n.falseDEG - n.falseDEG.fil # 56
## 結果をまとめる
pre <- list(disDEG = rownames(DEG_table),
falseDEG = falseDEG,
n.disDEG = nrow(DEG_table),
n.falseDEG = n.falseDEG)
pos <- list(disDEG.fil = rownames(DEG_table,fil),
falseDEG.fil = falseDEG.fil,
n.disDEG.fil = nrow(DEG_table.fil),
n.falseDEG.fil = n.falseDEG.fil)
res_mbcdeg3 <- list(pre = pre, pos = pos)
# まとめ
res <- list(MBCdeg1 = res_mbcdeg1,
MBCdeg2 = res_mbcdeg2,
MBCdeg3 = res_mbcdeg3)
res$MBCdeg3$pre$n.disDEG
res$MBCdeg3$pre$n.falseDEG
res$MBCdeg3$pos$n.disDEG.fil
res$MBCdeg3$pos$n.falseDEG.fil
res$MBCdeg2$pre$n.disDEG
res$MBCdeg2$pre$n.falseDEG
res$MBCdeg2$pos$n.disDEG.fil
res$MBCdeg2$pos$n.falseDEG.fil
res$MBCdeg1$pre$n.disDEG
res$MBCdeg1$pre$n.falseDEG
res$MBCdeg1$pos$n.disDEG.fil
res$MBCdeg1$pos$n.falseDEG.fil
155/448
library(ggplot2)
library(reshape2)
setwd("~/Desktop")
# Setting parameters
G <- 10000
PDEG = 0.05
P1 = 0.5
n1 <- 3
nominalFDR <- seq(0,1,0.001)
name <- 'tcc'
matome <- NULL
df_list <- vector("list", length = 5)
for (i in 1:length(df_list)){
df_list[[i]] <- matrix(0, ncol = length(PDEG), nrow = length(nominalFDR))
colnames(df_list[[i]]) <- paste('PDEG = ',PDEG,sep='')
rownames(df_list[[i]]) <- nominalFDR
}
names(df_list) <- c("edgeR","DESeq2","MBCdeg1","MBCdeg2","MBCdeg3")
# FDR
in_f <- paste("res_fdr/fdr_2group_",name,"_",PDEG[i],"_",p1,"_n",n1,".txt",sep="")
data <- read.table(in_f,sep='\t',header = T)
head(data)
i=1
p1 = P1
# FDR
in_f <- paste("res_fdr/fdr_2group_",name,"_",PDEG[i],"_",p1,"_n",n1,".txt",sep="")
data <- read.table(in_f,sep='\t',header = T)
head(data)
in_f
data[51,]
PDEG <- c(0.75)
P1 <- c(1.0)
p1 = 1
# FDR
in_f <- paste("res_fdr/fdr_2group_",name,"_",PDEG[i],"_",p1,"_n",n1,".txt",sep="")
data <- read.table(in_f,sep='\t',header = T)
head(data)
data[51,]
setwd("~/Desktop/修論script/simdata_analysis/test")
# Loading scripts
source("../../param.R")
source("../../package.R")
source("../../pipeline.R")
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
FC <- param$fc
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[1]]
q <- param$q
data.name <- param$simdata.name
name <- data.name[1]
# Loading data
in_f <- paste("../simdata_2group_",PDEG,"_",P1,"_n",n1,".obj",sep="")
data.all <- readRDS(in_f)
data <- data.all[[1]]
head(data)
length(data.all)
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
FC <- param$fc
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[1]]
q <- param$q
data.name <- param$simdata.name
name <- data.name[1]
# Loading data
in_f <- paste("../simdata_2group_",PDEG,"_",P1,"_n",n1,".obj",sep="")
in_f
data.all <- readRDS(in_f)
length(data.all)
data.all
data <- data.all$tcc
length(data)
df <- NULL
data[[1]]
data[[1]]$count
data[[1]]$Sample
data[[1]]@Sample
names(data[[1]])
data[[1]]
data.all$tcc[[1]]
data.all$tcc[[1]]$DEGES
data.all$tcc[[1]]$group
data.all$tcc[[1]]$norm.factors
data.all$tcc[[1]]$sample
str(data[[1]])
rowMeans(data[[1]])
rowMeans(data[[1]]$count)
colMeans(data[[1]]$count)
data[[1]]
df <- NULL
for (i in 1:length(data)){
df <- rbind(df,colMeans(data[[i]]$count))
}
df
colMeans(df)
data[[1]]
param$pdeg
PDEG <- param$pdeg[[6]]
assign <- param$assign$`2group`[[3]]
P1 <- assign[1]
P2 <- assign[2]
# Loading data
in_f <- paste("../simdata_2group_",PDEG,"_",P1,"_n",n1,".obj",sep="")
data.all <- readRDS(in_f)
in_f
data <- data.all$tcc
df <- NULL
for (i in 1:length(data)){
df <- rbind(df,colMeans(data[[i]]$count))
}
colMeans(df)
assign <- param$assign$`2group`[[4]]
P1 <- assign[1]
P2 <- assign[2]
# Loading data
in_f <- paste("../simdata_2group_",PDEG,"_",P1,"_n",n1,".obj",sep="")
data.all <- readRDS(in_f)
data <- data.all$tcc
df <- NULL
for (i in 1:length(data)){
df <- rbind(df,colMeans(data[[i]]$count))
}
colMeans(df)
data[[1]]
setwd("~/Desktop/修論script/realdata_analysis/test")
# Loading scripts
source("../../param.R")
source("../../package.R")
source("../../pipeline.R")
# Loading data
in_f <- "../realdataset.obj"
data.all <- readRDS(in_f)
# Setting parameters
data.name <- param$realdata.name
name <- data.name[1]
head(data)
data <- data.all[[name]]$data
head(data)
colMeans(data)
plot(colMeans(data))
plot(colMeans(data),col = c("#cd853f","#8a2be2","#FF367F","#4689FF","#009900","#696969"))
plot(colMeans(data),col = c(rep("#FF367F",4),rep("#FF367F",4))
)
plot(colMeans(data),col = c(rep("#FF367F",4),rep("#4689FF",4))
)
plot(colMeans(data),col = c(rep("#FF367F",4),rep("#4689FF",4)),pch=19
)
barplot(colMeans(data),col = c(rep("#FF367F",4),rep("#4689FF",4)),pch=19
)
barplot(colMeans(data),col = c(rep("#FF367F",4),rep("#4689FF",4)),pch=19,main = "Liver samples"
)
name <- data.name[2]
data <- data.all[[name]]$data
barplot(colMeans(data),col = c(rep("#FF367F",4),rep("#4689FF",4)),pch=19,main = "Liver samples"
)
head(data)
barplot(colMeans(data),col = c(rep("#FF367F",51),rep("#4689FF",58)),pch=19,main = "Immune therapy"
)
name <- data.name[3]
data <- data.all[[name]]$data
head(data)
barplot(colMeans(data),col = c(rep("#FF367F",74),rep("#4689FF",74)),pch=19,main = "Skin biopsies"
)
name <- data.name[4]
data <- data.all[[name]]$data
head(data)
barplot(colMeans(data),col = c(rep("#FF367F",40),rep("#4689FF",29)),pch=19,main = "Lymphoblastoid cell lines"
)
colMeans(data)
rowMeans(colMeans(data)[1:40])
rowMeans(Means(data)[1:40])
rowMeans(means(data)[1:40])
rowMeans(mean(data)[1:40])
mean(colMeans(data)[1:40])
mean(colMeans(data)[41:69])
name <- data.name[1]
data <- data.all[[name]]$data
head(data)
mean(colMeans(data)[1:4])
mean(colMeans(data)[5:8])
name <- data.name[2]
data <- data.all[[name]]$data
head(data)
mean(colMeans(data)[1:51])
mean(colMeans(data)[52:109])
name <- data.name[3]
data <- data.all[[name]]$data
head(data)
mean(colMeans(data)[1:74])
mean(colMeans(data)[74:148])
