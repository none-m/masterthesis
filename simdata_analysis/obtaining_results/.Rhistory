ylab = "",xlab = "",
xaxt="n",
pch = 2,
col="red",
yaxs = "i")# Copy Image
x <- data.frame(Method = c("MBCdeg1","MBCdeg2","MBCdeg3"),
nDEG = c(#nDEG_ori$edgeR,nDEG_ori$DESeq2,nDEG_ori$TCC,
nDEG_ori$MBCdeg1_K3,nDEG_ori$MBCdeg2_K3,nDEG_ori$MBCdeg3_K3))
g <- ggplot(x, aes(x = Method, y = nDEG, fill = Method))
g <- g + theme_bw()
g <- g + geom_bar(stat = "identity")
g <- g + scale_x_discrete(limit=c("MBCdeg1","MBCdeg2","MBCdeg3"),
labels =c("MBCdeg1","MBCdeg2","MBCdeg3"))
#g <- g + scale_fill_nejm()
g <- g + scale_fill_manual(values = c("#FF367F","#4689FF","#009900"),labels =c("MBCdeg1","MBCdeg2","MBCdeg3"))
g<- g+ theme(legend.box='horizontal',
legend.position='bottom',
panel.grid.major.x=element_blank(),
legend.title=element_text(size = 15,face = "bold"),
legend.text = element_text(size = 15,face = "bold.italic"))
g <- g + guides(fill = guide_legend(nrow=1))
plot(g)
reticulate::repl_python()
reticulate::repl_python()
setwd("~/Desktop/修論script/simdata_analysis/obtaining_results")
# Loading scripts
source("../../param.R")
source("../../package.R")
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[2]]
data.name <- param$simdata.name
name <- data.name[1]
# Loading data
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
res.all <- readRDS(in_f)
in_f
k.list <- param$k[[1]]
# Obtaining AUC value
## Preparation
auc.list <- list()
auc.list$MBCdeg1 <- auc.list$MBCdeg2 <- auc.list$MBCdeg3 <- vector("list", length = length(k.list))
matome <- NULL
## main loop
N_trial <- length(res.all$edgeR)
for (i in 1:N_trial){
obj <- res.all$obj
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$edgeR <- rbind(auc.list$edgeR,auc)
### DESeq2
ranking <- res.all$DESeq2[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$DESeq2 <- rbind(auc.list$DESeq2,auc)
### TCC
ranking <- res.all$TCC[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$TCC <- rbind(auc.list$TCC,auc)
### MBCdeg
for (k in 1:length(k.list)){
### MBCdeg1
ranking <- res.all$MBCdeg1[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg1[[k]] <- rbind(auc.list$MBCdeg1[[k]],auc)
### MBCdeg2
ranking <- res.all$MBCdeg2[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg2[[k]] <- rbind(auc.list$MBCdeg2[[k]],auc)
### MBCdeg3
ranking <- res.all$MBCdeg3[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg3[[k]] <- rbind(auc.list$MBCdeg3[[k]],auc)
}
}
## main loop
N_trial <- length(res.all$edgeR)
N_trial
i=1
obj <- res.all$obj
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
ranking
res.all <- readRDS(in_f)
# Obtaining AUC value
## Preparation
auc.list <- list()
auc.list$MBCdeg1 <- auc.list$MBCdeg2 <- auc.list$MBCdeg3 <- vector("list", length = length(k.list))
matome <- NULL
## main loop
N_trial <- length(res.all$edgeR)
for (i in 1:N_trial){
obj <- res.all$obj
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$edgeR <- rbind(auc.list$edgeR,auc)
### DESeq2
ranking <- res.all$DESeq2[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$DESeq2 <- rbind(auc.list$DESeq2,auc)
### TCC
ranking <- res.all$TCC[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$TCC <- rbind(auc.list$TCC,auc)
### MBCdeg
for (k in 1:length(k.list)){
### MBCdeg1
ranking <- res.all$MBCdeg1[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg1[[k]] <- rbind(auc.list$MBCdeg1[[k]],auc)
### MBCdeg2
ranking <- res.all$MBCdeg2[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg2[[k]] <- rbind(auc.list$MBCdeg2[[k]],auc)
### MBCdeg3
ranking <- res.all$MBCdeg3[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg3[[k]] <- rbind(auc.list$MBCdeg3[[k]],auc)
}
}
obj <- res.all$obj
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
-ranking
obj
obj <- res.all$obj
setwd("~/Desktop/修論script/simdata_analysis/obtaining_results")
# Loading scripts
source("../../param.R")
source("../../package.R")
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[1]]
data.name <- param$simdata.name
name <- data.name[1]
# Loading data
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
d1 <- readRDS(in_f)
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,"_2.obj",sep="")
d2 <- readRDS(in_f)
# Binding data
data <- list(edgeR = c(d1$edgeR,d2$edgeR),
DESeq2 = c(d1$DESeq2,d2$DESeq2),
TCC = c(d1$TCC,d2$TCC),
MBCdeg1 = list(),
MBCdeg2 = list(),
MBCdeg3 = list(),
obj = d1$obj)
data$MBCdeg1$K3 <- c(d1$MBCdeg1$K3,d2$MBCdeg1$K3)
data$MBCdeg2$K3 <- c(d1$MBCdeg2$K3,d2$MBCdeg2$K3)
data$MBCdeg3$K3 <- c(d1$MBCdeg3$K3,d2$MBCdeg3$K3)
# Output
out_f <- paste("res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
saveRDS(data,out_f)
setwd("~/Desktop/修論script/simdata_analysis/obtaining_results")
# Loading scripts
source("../../param.R")
source("../../package.R")
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[1]]
data.name <- param$simdata.name
name <- data.name[1]
# Loading data
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
res.all <- readRDS(in_f)
# Obtaining AUC value
## Preparation
auc.list <- list()
auc.list$MBCdeg1 <- auc.list$MBCdeg2 <- auc.list$MBCdeg3 <- vector("list", length = length(k.list))
matome <- NULL
## main loop
N_trial <- length(res.all$edgeR)
for (i in 1:N_trial){
obj <- res.all$obj
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$edgeR <- rbind(auc.list$edgeR,auc)
### DESeq2
ranking <- res.all$DESeq2[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$DESeq2 <- rbind(auc.list$DESeq2,auc)
### TCC
ranking <- res.all$TCC[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$TCC <- rbind(auc.list$TCC,auc)
### MBCdeg
for (k in 1:length(k.list)){
### MBCdeg1
ranking <- res.all$MBCdeg1[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg1[[k]] <- rbind(auc.list$MBCdeg1[[k]],auc)
### MBCdeg2
ranking <- res.all$MBCdeg2[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg2[[k]] <- rbind(auc.list$MBCdeg2[[k]],auc)
### MBCdeg3
ranking <- res.all$MBCdeg3[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg3[[k]] <- rbind(auc.list$MBCdeg3[[k]],auc)
}
}
setwd("~/Desktop/修論script/simdata_analysis/obtaining_results")
# Loading scripts
source("../../param.R")
source("../../package.R")
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[1]]
data.name <- param$simdata.name
name <- data.name[1]
# Loading data
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
d1 <- readRDS(in_f)
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,"_2.obj",sep="")
d2 <- readRDS(in_f)
edgeR <- DESeq2 <- vector("list", length = 50)
for(i in 1:50){
edgeR[[i]]$table <- d1$edgeR[[i]]
DESeq2[[i]]$table <- d1$DESeq2[[i]]
}
d <- list(edgeR = c(edgeR,d2$edgeR[51:100]),
DESeq2 = c(DESeq2,d2$DESeq2[51:100]),
TCC = c(d1$TCC,d2$TCC),
MBCdeg1 = list(),
MBCdeg2 = list(),
MBCdeg3 = list(),
obj = d1$obj)
data$MBCdeg1$K3 <- c(d1$MBCdeg1$K3,d2$MBCdeg1$K3)
data$MBCdeg2$K3 <- c(d1$MBCdeg2$K3,d2$MBCdeg2$K3)
data$MBCdeg3$K3 <- c(d1$MBCdeg3$K3,d2$MBCdeg3$K3)
data <- list(edgeR = c(edgeR,d2$edgeR[51:100]),
DESeq2 = c(DESeq2,d2$DESeq2[51:100]),
TCC = c(d1$TCC,d2$TCC),
MBCdeg1 = list(),
MBCdeg2 = list(),
MBCdeg3 = list(),
obj = d1$obj)
data$MBCdeg1$K3 <- c(d1$MBCdeg1$K3,d2$MBCdeg1$K3)
data$MBCdeg2$K3 <- c(d1$MBCdeg2$K3,d2$MBCdeg2$K3)
data$MBCdeg3$K3 <- c(d1$MBCdeg3$K3,d2$MBCdeg3$K3)
# Output
out_f <- paste("res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
saveRDS(data,out_f)
setwd("~/Desktop/修論script/simdata_analysis/obtaining_results")
# Loading scripts
source("../../param.R")
source("../../package.R")
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[1]]
data.name <- param$simdata.name
name <- data.name[1]
# Loading data
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
res.all <- readRDS(in_f)
# Obtaining AUC value
## Preparation
auc.list <- list()
auc.list$MBCdeg1 <- auc.list$MBCdeg2 <- auc.list$MBCdeg3 <- vector("list", length = length(k.list))
matome <- NULL
## main loop
N_trial <- length(res.all$edgeR)
for (i in 1:N_trial){
obj <- res.all$obj
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$edgeR <- rbind(auc.list$edgeR,auc)
### DESeq2
ranking <- res.all$DESeq2[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$DESeq2 <- rbind(auc.list$DESeq2,auc)
### TCC
ranking <- res.all$TCC[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$TCC <- rbind(auc.list$TCC,auc)
### MBCdeg
for (k in 1:length(k.list)){
### MBCdeg1
ranking <- res.all$MBCdeg1[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg1[[k]] <- rbind(auc.list$MBCdeg1[[k]],auc)
### MBCdeg2
ranking <- res.all$MBCdeg2[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg2[[k]] <- rbind(auc.list$MBCdeg2[[k]],auc)
### MBCdeg3
ranking <- res.all$MBCdeg3[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg3[[k]] <- rbind(auc.list$MBCdeg3[[k]],auc)
}
}
# Loading data
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
res.all <- readRDS(in_f)
# Obtaining AUC value
## Preparation
auc.list <- list()
auc.list$MBCdeg1 <- auc.list$MBCdeg2 <- auc.list$MBCdeg3 <- vector("list", length = length(k.list))
matome <- NULL
## main loop
N_trial <- length(res.all$edgeR)
for (i in 1:N_trial){
obj <- res.all$obj
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$edgeR <- rbind(auc.list$edgeR,auc)
### DESeq2
ranking <- res.all$DESeq2[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$DESeq2 <- rbind(auc.list$DESeq2,auc)
### TCC
ranking <- res.all$TCC[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$TCC <- rbind(auc.list$TCC,auc)
### MBCdeg
for (k in 1:length(k.list)){
### MBCdeg1
ranking <- res.all$MBCdeg1[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg1[[k]] <- rbind(auc.list$MBCdeg1[[k]],auc)
### MBCdeg2
ranking <- res.all$MBCdeg2[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg2[[k]] <- rbind(auc.list$MBCdeg2[[k]],auc)
### MBCdeg3
ranking <- res.all$MBCdeg3[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg3[[k]] <- rbind(auc.list$MBCdeg3[[k]],auc)
}
}
i
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
res.all$edgeR[[51]]
d2$edgeR[51:52]
d2$edgeR[[1]]
setwd("~/Desktop/修論script/simdata_analysis/obtaining_results")
setwd("~/Desktop/修論script/simdata_analysis/obtaining_results")
# Loading scripts
source("../../param.R")
source("../../package.R")
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[1]]
data.name <- param$simdata.name
name <- data.name[1]
for (PDEG in param$pdeg){
# Loading data
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
d1 <- readRDS(in_f)
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,"_2.obj",sep="")
d2 <- readRDS(in_f)
edgeR <- DESeq2 <- vector("list", length = 50)
for(i in 1:50){
edgeR[[i]]$table <- d1$edgeR[[i]]
DESeq2[[i]]$table <- d1$DESeq2[[i]]
}
data <- list(edgeR = c(edgeR,d2$edgeR[1:50]),
DESeq2 = c(DESeq2,d2$DESeq2[1:50]),
TCC = c(d1$TCC,d2$TCC),
MBCdeg1 = list(),
MBCdeg2 = list(),
MBCdeg3 = list(),
obj = d1$obj)
data$MBCdeg1$K3 <- c(d1$MBCdeg1$K3,d2$MBCdeg1$K3)
data$MBCdeg2$K3 <- c(d1$MBCdeg2$K3,d2$MBCdeg2$K3)
data$MBCdeg3$K3 <- c(d1$MBCdeg3$K3,d2$MBCdeg3$K3)
# Output
out_f <- paste("res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
saveRDS(data,out_f)
}
res.all <- readRDS(in_f)
setwd("~/Desktop/修論script/simdata_analysis/obtaining_results")
# Loading scripts
source("../../param.R")
source("../../package.R")
# Setting parameters
G <- param$g
PDEG <- param$pdeg[[1]]
assign <- param$assign$`2group`[[1]]
P1 <- assign[1]
P2 <- assign[2]
n1 <- n2 <- param$rep[[1]]
k.list <- param$k[[1]]
data.name <- param$simdata.name
name <- data.name[1]
# Loading data
in_f <- paste("../res_2group_",name,"_",PDEG,"_",P1,"_n",n1,".obj",sep="")
res.all <- readRDS(in_f)
# Obtaining AUC value
## Preparation
auc.list <- list()
auc.list$MBCdeg1 <- auc.list$MBCdeg2 <- auc.list$MBCdeg3 <- vector("list", length = length(k.list))
matome <- NULL
## main loop
N_trial <- length(res.all$edgeR)
for (i in 1:N_trial){
obj <- res.all$obj
### edgeR
ranking <- res.all$edgeR[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$edgeR <- rbind(auc.list$edgeR,auc)
### DESeq2
ranking <- res.all$DESeq2[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$DESeq2 <- rbind(auc.list$DESeq2,auc)
### TCC
ranking <- res.all$TCC[[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$TCC <- rbind(auc.list$TCC,auc)
### MBCdeg
for (k in 1:length(k.list)){
### MBCdeg1
ranking <- res.all$MBCdeg1[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg1[[k]] <- rbind(auc.list$MBCdeg1[[k]],auc)
### MBCdeg2
ranking <- res.all$MBCdeg2[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg2[[k]] <- rbind(auc.list$MBCdeg2[[k]],auc)
### MBCdeg3
ranking <- res.all$MBCdeg3[[k]][[i]]$table$rank
auc <- AUC(rocdemo.sca(truth=obj, data=-ranking))
auc.list$MBCdeg3[[k]] <- rbind(auc.list$MBCdeg3[[k]],auc)
}
}
# concatenating the results
if (name != "pro"){
matome <- data.frame(edgeR = auc.list$edgeR,
DESeq2 = auc.list$DESeq2,
TCC = auc.list$TCC,
#MBCdeg1_K2 = auc.list$MBCdeg1$K2,
MBCdeg1_K3 = auc.list$MBCdeg1$K3,
#MBCdeg1_K4 = auc.list$MBCdeg1$K4,
#MBCdeg2_K2 = auc.list$MBCdeg2$K2,
MBCdeg2_K3 = auc.list$MBCdeg2$K3,
#MBCdeg2_K4 = auc.list$MBCdeg2$K4,
#MBCdeg3_K2 = auc.list$MBCdeg3$K2,
MBCdeg3_K3 = auc.list$MBCdeg3$K3)
#MBCdeg3_K4 = auc.list$MBCdeg3$K4)
}else if (name == "pro"){
matome <- data.frame(edgeR = auc.list$edgeR,
DESeq2 = auc.list$DESeq2,
TCC = auc.list$TCC,
MBCdeg1_K3 = auc.list$MBCdeg1$K3,
MBCdeg2_K3 = auc.list$MBCdeg2$K3,
MBCdeg3_K3 = auc.list$MBCdeg3$K3)
}
names(auc.list$MBCdeg1) <- names(auc.list$MBCdeg2) <- names(auc.list$MBCdeg3) <- paste("K",k.list,sep="")
# concatenating the results
if (name != "pro"){
matome <- data.frame(edgeR = auc.list$edgeR,
DESeq2 = auc.list$DESeq2,
TCC = auc.list$TCC,
#MBCdeg1_K2 = auc.list$MBCdeg1$K2,
MBCdeg1_K3 = auc.list$MBCdeg1$K3,
#MBCdeg1_K4 = auc.list$MBCdeg1$K4,
#MBCdeg2_K2 = auc.list$MBCdeg2$K2,
MBCdeg2_K3 = auc.list$MBCdeg2$K3,
#MBCdeg2_K4 = auc.list$MBCdeg2$K4,
#MBCdeg3_K2 = auc.list$MBCdeg3$K2,
MBCdeg3_K3 = auc.list$MBCdeg3$K3)
#MBCdeg3_K4 = auc.list$MBCdeg3$K4)
}else if (name == "pro"){
matome <- data.frame(edgeR = auc.list$edgeR,
DESeq2 = auc.list$DESeq2,
TCC = auc.list$TCC,
MBCdeg1_K3 = auc.list$MBCdeg1$K3,
MBCdeg2_K3 = auc.list$MBCdeg2$K3,
MBCdeg3_K3 = auc.list$MBCdeg3$K3)
}
# Output
out_f <- paste("../auc_2group_",name,"_",PDEG,"_",P1,"_n",n1,".txt",sep="")
write.table(matome,out_f,sep="\t",append=F,quote=F,row.names=F)
